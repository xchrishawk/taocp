#+TITLE: The Art of Computer Programming - Section 1.4.2 Exercises
#+AUTHOR: Chris Vig
#+EMAIL: chris@invictus.so

* Chapter 1.4.2 - Coroutines

** Exercise 1

It is difficult to find short examples of coroutines because coroutines are most
useful in algorithms which are inherently complicated. Most simple algorithms
are more naturally expressed using subroutines.

** Exercise 2

If the =IN= coroutine was called first, you would lose the first input
character(s). The following would happen:

- Jump to =IN1=
- =IN1= reads character. If it's a digit, it reads another character. Either
  way, it jumps to =OUT=.
- =OUT= starts a new output card, and initializes the output buffer, then
  calls =IN=.
- =IN= reads another input character set, and passes it to =OUT=.
- =OUT= writes the character(s) to the buffer.

The characters that =IN= passed to =OUT= in its first loop would be lost,
because =OUT= would not be ready to receive them.

** Exercise 6

The objectives are:

- Any coroutine can jump into any other coroutine
- When a coroutine is resumed, it should pick up exactly where it left off

To do this kind of N-way multiplexing between coroutines, we need to know not
only what coroutine we're jumping *to*, but also what coroutine we're jumping
*from*. One example of how to accomplish this is with the following type of
linkage table:

#+NAME: ex6-linkage
#+BEGIN_SRC mixal :exports code :eval no
  AB      STJ     AX                      Jump from coroutine A to coroutine B
          JMP     BX
  AC      STJ     AX                      Jump from coroutine A to coroutine C
          JMP     CX
  BA      STJ     BX                      Jump from coroutine B to coroutine A
          JMP     AX
  BC      STJ     BX                      Jump from coroutine B to coroutine C
          JMP     CX
  CA      STJ     CX                      Jump from coroutine C to coroutine A
          JMP     AX
  CB      STJ     CX                      Jump from coroutine C to coroutine B
          JMP     BX

  AX      JMP     ASTART
  BX      JMP     BSTART
  CX      JMP     CSTART
#+END_SRC

For example, if you want to jump from coroutine A to coroutine B, you would
execute =JMP AB=. If you wanted to jump from coroutine A to coroutine C, you
would execute =JMP AC=.

Here is a complete program which uses the above linkage:

#+NAME: ex6-example
#+BEGIN_SRC mixal :tangle ex6.mixal :exports both :mixvm output
  ,* ex6.mixal
  ,* Chris Vig (chris@invictus.so)

  ,* -- Symbolic Constants --

  TTY     EQU     19                      Teletype device number
  TTYBLK  EQU     14                      Teletype block size
  LOOPS   EQU     3                       Number of loops of A to run

  ,* -- Instructions --

          ORIG    1000

  ,* Main Procedure

  MAIN    JMP     ASTART
  EXIT    HLT

  ,* Subroutine Linkage

  AB      STJ     AX                      Jump from coroutine A to coroutine B
          JMP     BX
  AC      STJ     AX                      Jump from coroutine A to coroutine C
          JMP     CX
  BA      STJ     BX                      Jump from coroutine B to coroutine A
          JMP     AX
  BC      STJ     BX                      Jump from coroutine B to coroutine C
          JMP     CX
  CA      STJ     CX                      Jump from coroutine C to coroutine A
          JMP     AX
  CB      STJ     CX                      Jump from coroutine C to coroutine B
          JMP     BX

  AX      JMP     ASTART
  BX      JMP     BSTART
  CX      JMP     CSTART

  ,* Coroutine A

  ASTART  LDX     ALBL1                   Print A1
          ENTA    0,1
          JMP     PRINTN
          JMP     AB                      Jump to coroutine B

          LDX     ALBL2                   Print A2
          ENTA    0,1
          JMP     PRINTN
          JMP     AC                      Jump to coroutine C

          LDX     ALBL3                   Print A3
          ENTA    0,1
          JMP     PRINTN
          JMP     AB                      Jump to coroutine B

          INC1    1                       Increment counter
          CMP1    =LOOPS=
          JL      ASTART                  Loop if counter < LOOPS
          JMP     EXIT                    Otherwise halt

  ALBL1   ALF     "A1:  "
  ALBL2   ALF     "A2:  "
  ALBL3   ALF     "A3:  "

  ,* Coroutine B

  BSTART  LDX     BLBL1                   Print B1
          ENTA    0,2
          JMP     PRINTN
          JMP     BA                      Jump to coroutine A

          LDX     BLBL2                   Print B2
          ENTA    0,2
          JMP     PRINTN
          JMP     BC                      Jump to coroutine C

          INC2    1                       Increment counter
          JMP     BSTART                  Loop

  BLBL1   ALF     "B1:  "
  BLBL2   ALF     "B2:  "

  ,* Coroutine C

  CSTART  LDX     CLBL1                   Print C1
          ENTA    0,3
          JMP     PRINTN
          JMP     CB                      Jump to coroutine B

          INC3    1                       Increment counter
          JMP     CSTART                  Loop

  CLBL1   ALF     "C1:  "

  ,* Subroutine PRINTN - print number
  ,* Arguments:
  ,*       rA: number to print
  ,*       rX: label to print

  OUTBUF  ORIG    *+TTYBLK
  PRINTN  STJ     9F
          STX     OUTBUF
          CHAR
          STA     OUTBUF+1
          STX     OUTBUF+2
          OUT     OUTBUF(TTY)
  9H      JMP     *

          END     MAIN
#+END_SRC

The output is shown below. You can see how each coroutine picks up where it left
off when it is re-entered.

#+RESULTS: ex6-example
#+begin_example
= Output =
Running ...
A1:  0000000000
B1:  0000000000
A2:  0000000000
C1:  0000000000
B2:  0000000000
C1:  0000000001
B1:  0000000001
A3:  0000000000
B2:  0000000001
C1:  0000000002
B1:  0000000002
A1:  0000000001
B2:  0000000002
C1:  0000000003
B1:  0000000003
A2:  0000000001
C1:  0000000004
B2:  0000000003
C1:  0000000005
B1:  0000000004
A3:  0000000001
B2:  0000000004
C1:  0000000006
B1:  0000000005
A1:  0000000002
B2:  0000000005
C1:  0000000007
B1:  0000000006
A2:  0000000002
C1:  0000000008
B2:  0000000006
C1:  0000000009
B1:  0000000007
A3:  0000000002
B2:  0000000007
C1:  0000000010
B1:  0000000008
... done
#+end_example
