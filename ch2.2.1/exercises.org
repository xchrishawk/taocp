#+TITLE: The Art of Computer Programming - Chapter 2.2.1 Exercises
#+AUTHOR: Chris Vig
#+EMAIL: chris@invictus.so

* Chapter 2.2.1 - Stacks, Queues, and Deques

** Exercise 1

Yes, an output-restricted deque can also be used as stack or a queue. For example,
consider a deque which only allows deletion from the LH side. To use as a queue,
you could always enqueue to the RH side and dequeue from the LH side. To use as a
stack, you could always push to the LH side and pop from the LH side. In either
case, you are obeying the output restriction.

** Exercise 2

Some, but not all, permutations can be created. For example, the permutation to
325641 is possible:

|---------+-------------+-------+-------------|
| Action  | Input       | Stack | Output      |
|---------+-------------+-------+-------------|
| Initial | 1 2 3 4 5 6 |       |             |
| Push 1  | 2 3 4 5 6   | 1     |             |
| Push 2  | 3 4 5 6     | 2 1   |             |
| Push 3  | 4 5 6       | 3 2 1 |             |
| Pop 3   | 4 5 6       | 2 1   | 3           |
| Pop 2   | 4 5 6       | 1     | 3 2         |
| Push 4  | 5 6         | 4 1   | 3 2         |
| Push 5  | 6           | 5 4 1 | 3 2         |
| Pop 5   | 6           | 4 1   | 3 2 5       |
| Push 6  |             | 6 4 1 | 3 2 5       |
| Pop 6   |             | 4 1   | 3 2 5 6     |
| Pop 4   |             | 1     | 3 2 5 6 4   |
| Pop 1   |             |       | 3 2 5 6 4 1 |
|---------+-------------+-------+-------------|

The permutation to 154623 is *not* possible:

|---------+-------------+---------+---------|
| Action  | Input       | Stack   |  Output |
|---------+-------------+---------+---------|
| Initial | 1 2 3 4 5 6 |         |         |
| Push 1  | 2 3 4 5 6   | 1       |         |
| Pop 1   | 2 3 4 5 6   |         | 1       |
| Push 2  | 3 4 5 6     | 2       | 1       |
| Push 3  | 4 5 6       | 3 2     | 1       |
| Push 4  | 5 6         | 4 3 2   | 1       |
| Push 5  | 6           | 5 4 3 2 | 1       |
| Pop 5   | 6           | 4 3 2   | 1 5     |
| Pop 4   | 6           | 3 2     | 1 5 4   |
| Push 6  |             | 6 3 2   | 1 5 4   |
| Pop 6   |             | 3 2     | 1 5 4 6 |
| ...?    |             |         |         |
|---------+-------------+---------+---------|

Eventually you get to a state where 3 is on top of 2 in the stack, and there is
no way to reverse them.

** Exercise 3

You can check the validity of a combination like this using an iterative procedure:

1. Set ~N ← 0~.
2. Start at the LH side of the sequence, and proceed rightward.
3. Any time you encounter an ~S~, set ~N ← N + 1~.
4. Any time you encounter an ~X~, set ~N ← N - 1~.
5. If ~N~ ever drops below zero, the sequence is invalid.
6. If ~N~ is not equal to zero once all characters have been scanned, the sequence
   is invalid.

** Exercise 6

It is not possible to rearrange elements using a queue, since they must always
exit in the same order that they enter.
