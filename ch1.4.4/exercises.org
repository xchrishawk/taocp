#+TITLE: The Art of Computer Programming - Section 1.4.4 Exercises
#+AUTHOR: Chris Vig
#+EMAIL: chris@invictus.so

* Chapter 1.4.4 - Input and Output

** Exercise 3

The layout of the buffers in memory is:

- BUF+0 :: beginning of output buffer
- BUF+99 :: last output word
- BUF+100 :: sentinel word to indicate end of buffer
- BUF+101 :: the address of the next buffer to use

For this example, I'm using -1 as a sentinel value, with the restriction that
this subroutine only supports writing positive words.

The subroutine looks like this:

#+NAME: ex3-wordout
#+BEGIN_SRC mixal :exports code :eval no
  ,* Subroutine WORDOUT - write output word
  ,* Arguments:n
  ,*       rA - word to write (must not be negative)

  WORDOUT STJ     9F                      Subroutine linkage
          ST5     8F(1:2)                 Restore rI5 when done

          LD5     PREVOUT                 Get address of previous output word
          INC5    1                       Go to next word in buffer
          LDX     0,5                     Is content of next output word negative? (sentinel value)
          JXNN    1F                      If not, skip the next block

          DEC5    TAPEBLK                 Move rI5 back to beginning of buffer
          OUT     0,5(TAPE)               Begin writing buffer to tape
          INC5    TAPEBLK+1               Move rI5 to address of next buffer after sentinel value
          LD5     0,5                     Get address of next buffer into rI5

  1H      STA     0,5                     Store rA into the output word
          ST5     PREVOUT                 Save address that we wrote to for next time

  8H      ENT5    *                       Restore rI5
  9H      JMP     *                       Jump back to caller
#+END_SRC

The buffers are defined as follows:

#+NAME: ex3-buffers
#+BEGIN_SRC mixal :exports code :eval no
  OUTBUF1 ORIG    *+TAPEBLK               Output buffer #1
          CON     SNTL
          CON     *+1

  OUTBUF2 ORIG    *+TAPEBLK               Output buffer #2
          CON     SNTL
          CON     OUTBUF1

  PREVOUT CON     OUTBUF1-1               Address of next word to write to
#+END_SRC

The final requirement is that all remaining output should be written at the end
of the program, padded with zeroes if necessary. I use a separate subroutine to
handle this:

#+NAME: ex3-flush
#+BEGIN_SRC mixal :exports code :eval no
  ,* Subroutine FLUSH - flush remaining output

  FLUSH   STJ     9F                      Subroutine linkage
          ST5     8F(1:2)                 Restore rI5 when done

          LD5     PREVOUT                 Get address of previous output word
  1H      INC5    1                       Go to next word in buffer
          LDX     0,5                     Is content of next output word negative? (sentinel value)
          JXN     2F                      If so, jump ahead
          STZ     0,5                     Write zero to output word
          JMP     1B                      Loop

  2H      DEC5    TAPEBLK                 Move rI5 back to beginning of buffer
          OUT     0,5(TAPE)               Output buffer to tape
          JBUS    *(TAPE)                 Wait for output to complete

  8H      ENT5    *                       Restore rI5
  9H      JMP     *                       Jump back to caller
#+END_SRC

The main program is responsible for calling =FLUSH= when needed. An example of
what this could look like is:

#+NAME: ex3-main
#+BEGIN_SRC mixal :exports code :eval no
  MAIN    ENT5    3980                    Output 3980 words
  1H      ENTA    0,5
          JMP     WORDOUT                 Write word
          DEC5    1                       Decrement counter
          J5NZ    1B                      Loop
          JMP     FLUSH                   Flush any remaining output in buffer
          HLT
#+END_SRC

#+NAME: ex3-tangle
#+BEGIN_SRC mixal :tangle ex3.mixal :noweb yes :exports results :mixvm time
  ,* ex3.mixal
  ,* Chris Vig (chris@invictus.so)

  ,* -- Symbolic Constants --

  TAPE    EQU     0                       Device number for the output tape
  TAPEBLK EQU     100                     Block size for the output tape
  SNTL    EQU     -1                      Sentinel value to indicate end of buffer

  ,* -- Instructions --

          ORIG    3000

  <<ex3-main>>

  <<ex3-wordout>>

  <<ex3-flush>>

  ,* -- Memory Buffers --

  <<ex3-buffers>>

          END     MAIN
#+END_SRC

Timing information for the complete program is:

#+RESULTS: ex3-tangle
: = Time =
: Elapsed time: 79962 /Total program time: 79962 (Total uptime: 79962)
